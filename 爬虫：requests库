打开cmd通过pip install requests指令来进行安装
requests常用方法：
1,r = requests.get(url)
2,r = requests.get(url, params=None, **kwargs)
**kwargs:12个控制访问的参数
3,r = requests.request('way_name', url, params=params, **kwargs)

in[0]: type(r)
out[0]: <class 'requests.models.Response'>
Response对象属性：
1,r.status_code：http请求的返回状态
2,r.text：http响应内容的字符串形式，即url对应的页面内容
3,r.encoding：从http header中猜测的响应内容编码方式
4,r.apparent_encoding：从内容中分析出的响应内容编码方式
5,r.content：http响应内容的二进制形式

Response异常状态：
1,requests.ConnectionError：网络连接错误异常，如DNS查询失败、拒绝连接等
2,requests.HTTPError：HTTP错误异常
3,requests.URLRequired：URL缺失异常
4,requests.TooManyRedirects：超过最大重定向次数，产生重定向异常
5,requests.ConnectTimeout：连接远程服务器超时异常
6,requests.Timeout：请求URL超时，产生超时异常

requests库主要方法：
requests.request()：构造一个请求，支撑以下各方法的基础方法
requests.get()：获取HTML网页的主要方法
requests.head()：获取HTML网页头信息的方法
requests.post()：向HTML网页提交POST请求的方法
requests.put()：向HTML网页提交PUT请求的方法
requests.patch()：向HTML网页提交局部修改请求
requests.delete()：向HTML页面提交删除请求

HTTP协议对资源的操作
GET：请求获取URL位置的咨询
HEAD：请求获取URL位置资源的响应消息报告，即获得该资源的头部信息
POST：请求向URL位置的资源后附加新的资源
PUT：请求向URL位置存储一个资源，覆盖原URL位置的资源
PATCH：请求局部更新URL位置的资源，即改变该处资源的部分内容
DELETE：请求删除URL位置存储的资源
